import Head from 'next/head'
import styles from '../styles/Home.module.css'
import Setting from '../components/Setting'
import { useState, useEffect } from 'react'
import Main from '../components/Main'
import Dice from '../components/Dice'
import Player from '../components/Player'

export default function Home() {

  let players = ['仲', '高', '宇', '敏', '霞', '炜'];
  let [playerSlect, setPlayerSlect] = useState(players);
  let [playerList, setPlayerList] = useState([]);
  let [dieOne, setDieOne] = useState(2);
  let [dieTwo, setDieTwo] = useState(3);
  let [round, setRound] = useState(0);
  let [view, setView] = useState('setting');
  let [diceRecord, setDiceRecord] = useState(Array(11).fill(0)); 
  let [index, setIndex] = useState();
  let [currentPlayer, setCurrentPlayer] = useState();
  let [animation, setAnimation] = useState(false);
  let [count, setCount] = useState(0);
  let [diceData, setDiceData] = useState([]);

  useEffect(() => {

    const sound = new Audio("yyds.m4a");

    setTimeout(() => {
        setAnimation(false)
    }, 600);

    if (dieOne + dieTwo == 0 || dieOne + dieTwo == 10) {
        sound.play();
    }

    if (round !== 0) {

        let clone = diceRecord;
        clone[dieOne + dieTwo]++;
        setDiceRecord(clone);

        let dataClone = diceData;
        dataClone.push(dieOne + dieTwo + 2);
        setDiceData(dataClone);

    }

  }, [count])

  let views = (view) => {
    switch (view) {
      case 'setting':
        return <Setting playerSlect={playerSlect} playerList={playerList} setPlayerList={setPlayerList} setPlayerSlect={setPlayerSlect} setView={setView} setRound={setRound} setCurrentPlayer={setCurrentPlayer} setDiceRecord={setDiceRecord} setIndex={setIndex} currentPlayer={currentPlayer} setDiceData={setDiceData} />;

      case 'main':
        return  <Main dieOne={dieOne} dieTwo={dieTwo} round={round} setDieOne={setDieOne} setDieTwo={setDieTwo} playerList={playerList} setView={setView} setRound={setRound} index={index} setIndex={setIndex} currentPlayer={currentPlayer} setCurrentPlayer={setCurrentPlayer} animation={animation} setAnimation={setAnimation} setCount={setCount} />;

      case 'dice':
        return <Dice diceRecord={diceRecord} setView={setView} />;

      case 'player':
        return <Player diceData={diceData} setView={setView} />;
    
      default:
        break;
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>大爷显灵</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/yyds.jpg" />
      </Head>
      {views(view)}
    </div>
  )
}


